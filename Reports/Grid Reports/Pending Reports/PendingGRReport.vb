
Imports BL

Public Class PendingGRReport

    Dim USERADD, USEREDIT, USERVIEW, USERDELETE As Boolean      'USED FOR RIGHT MANAGEMAENT

    Private Sub CMDEXIT_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles CMDEXIT.Click
        Me.Close()
    End Sub

    Private Sub PendingGRReport_KeyDown(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles Me.KeyDown
        If (e.KeyCode = Windows.Forms.Keys.Escape) Then   'for Exit
            Me.Close()
        ElseIf e.KeyCode = Keys.Enter Then
            SendKeys.Send("{Tab}")
        ElseIf e.Alt = True And e.KeyCode = Keys.R Then
            Call TOOLREFRESH_Click(sender, e)
        ElseIf e.Alt = True And e.KeyCode = Keys.P Then
            Call TOOLEXCEL_Click(sender, e)
        ElseIf e.KeyCode = Keys.OemQuotes Then
            e.SuppressKeyPress = True
        End If
    End Sub

    Private Sub PendingGRReport_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load
        Try

            Dim DTROW() As DataRow = USERRIGHTS.Select("FormName = 'GDN'")
            USERADD = DTROW(0).Item(1)
            USEREDIT = DTROW(0).Item(2)
            USERVIEW = DTROW(0).Item(3)
            USERDELETE = DTROW(0).Item(4)

            If USEREDIT = False And USERVIEW = False Then
                MsgBox("Insufficient Rights")
                Exit Sub
            End If
            fillgrid()
        Catch ex As Exception
            Throw ex
        End Try
    End Sub

    Sub showform(ByVal EDITVAL As Boolean, ByVal CHALLANNO As Integer)
        Try
            If USEREDIT = False And USERVIEW = False Then
                MsgBox("Insufficient Rights")
                Exit Sub
            End If
            Dim OBJCHALLAN As New Challan
            OBJCHALLAN.EDIT = EDITVAL
            OBJCHALLAN.MdiParent = MDIMain
            OBJCHALLAN.TEMPCHALLANNO = CHALLANNO
            OBJCHALLAN.Show()
        Catch ex As Exception
            Throw ex
        End Try
    End Sub

    Sub fillgrid()
        Try
            Dim OBJCMN As New ClsCommon
            'THIS IS OLD CODE
            'NOW WE HAVE SHIFTED TO SALE RETURN, SO WE NEED TO FETCH THIS DATA FROM SALE INVOICE
            'WE ALSO NEED TO GET DATA FROM CHALLANMASTER WHERE FORDYEING = TRUE, COZ WE ARE NOT GOING TO CREATE INVOICE FOR THOSE CHALLANS
            'Dim dttable As DataTable = OBJCMN.search("CHALLANMASTER.CHALLAN_NO AS CHALLANNO, CHALLANMASTER.CHALLAN_DATE AS CHALLANDATE, ISNULL(CHALLANMASTER.CHALLAN_ORDERNO, 0)  AS ORDERNO, ISNULL(CHALLANMASTER.CHALLAN_ORDERSRNO, 0) AS ORDERSRNO, ISNULL(CHALLANMASTER.CHALLAN_ORDERTYPE, '') AS ORDERTYPE,  ISNULL(GODOWNMASTER.GODOWN_NAME, '') AS GODOWN, ISNULL(LEDGERS.Acc_cmpname, '') AS NAME, ISNULL(BROKER.Acc_cmpname, '') AS BROKER, ISNULL(TRANSPORT.Acc_cmpname, '') AS TRANSPORT, ISNULL(CHALLANMASTER.CHALLAN_VEHICLENO, '') AS VEHICLENO, ISNULL(DELIVERYAT.Acc_cmpname, '') AS DELIVERYAT, ISNULL(CHALLANMASTER.CHALLAN_FORDYEING, 0) AS FORDYEING, ISNULL(CHALLANMASTER.CHALLAN_CUTPACK, 0) AS CUTPACK, ISNULL(CHALLANMASTER.CHALLAN_LOTNO, 0) AS LOTNO, ISNULL(CHALLANMASTER.CHALLAN_GRDONO, 0) AS GRDONO, ISNULL(CHALLANMASTER.CHALLAN_GRPCS, 0) AS GRPCS, ISNULL(CHALLANMASTER.CHALLAN_GRMTRS, 0) AS GRMTRS, ISNULL(CHALLANMASTER.CHALLAN_SHORTAGE, 0) AS SHORTAGE, ISNULL(CHALLANMASTER.CHALLAN_REMARKS, '') AS REMARKS, CHALLANMASTER.CHALLAN_DONE AS DONE, ISNULL(CHALLANMASTER.CHALLAN_TOTALBALES, 0) AS TOTALBALES, ISNULL(CHALLANMASTER.CHALLAN_TOTALTAKA, 0) AS TOTALTAKA, ISNULL(CHALLANMASTER.CHALLAN_TOTALMTRS, 0) AS TOTALMTRS, ISNULL(CHALLANMASTER.CHALLAN_TOTALTP, 0) AS TOTALTP, ISNULL(CHALLANMASTER_DESC.CHALLAN_GRIDSRNO, 0) AS SRNO, ISNULL(GREYQUALITYMASTER.GREY_NAME, '') AS QUALITY, ISNULL(CHALLANMASTER_DESC.CHALLAN_BALENO, 0) AS BALENO, ISNULL(CHALLANMASTER_DESC.CHALLAN_TAKA, 0) AS TAKA, ISNULL(CHALLANMASTER_DESC.CHALLAN_MTRS, 0) AS MTRS, ISNULL(CHALLANMASTER_DESC.CHALLAN_TP, 0) AS TP, ISNULL(CHALLANMASTER_DESC.CHALLAN_NARR, '') AS NARR ", "", " CHALLANMASTER INNER JOIN CHALLANMASTER_DESC ON CHALLANMASTER.CHALLAN_NO = CHALLANMASTER_DESC.CHALLAN_NO AND CHALLANMASTER.CHALLAN_YEARID = CHALLANMASTER_DESC.CHALLAN_YEARID INNER JOIN LEDGERS ON CHALLANMASTER.CHALLAN_LEDGERID = LEDGERS.Acc_id INNER JOIN GODOWNMASTER ON CHALLANMASTER.CHALLAN_GODOWNID = GODOWNMASTER.GODOWN_ID INNER JOIN GREYQUALITYMASTER ON CHALLANMASTER_DESC.CHALLAN_QUALITYID = GREYQUALITYMASTER.GREY_ID LEFT OUTER JOIN LEDGERS AS DELIVERYAT ON CHALLANMASTER.CHALLAN_DELIVERYID = DELIVERYAT.Acc_id LEFT OUTER JOIN LEDGERS AS BROKER ON CHALLANMASTER.CHALLAN_BROKERID = BROKER.Acc_id LEFT OUTER JOIN LEDGERS AS TRANSPORT ON CHALLANMASTER.CHALLAN_TRANSID = TRANSPORT.Acc_id ", " AND ISNULL(CHALLANMASTER.CHALLAN_TYPE,'GREY') = 'GREY' AND ISNULL(CHALLAN_NOGR,'FALSE') = 'FALSE' AND CHALLANMASTER.CHALLAN_YEARID = " & YearId & " AND CHALLANMASTER.CHALLAN_GRMTRS = 0 ORDER BY CHALLANMASTER.CHALLAN_NO")
            'Dim dttable As DataTable = OBJCMN.search(" ", "", " ", " AND ORDER BY CHALLANMASTER.CHALLAN_NO")
            Dim dttable As DataTable = OBJCMN.search("*", "", "(SELECT INVOICEMASTER.INVOICE_NO AS INVNO, INVOICEMASTER.INVOICE_DATE AS INVDATE, ISNULL(LEDGERS.Acc_cmpname, '') AS NAME, ISNULL(BROKER.Acc_cmpname, '') AS BROKER, ISNULL(TRANSPORT.Acc_cmpname, '') AS TRANSPORT, ISNULL(DELIVERYAT.Acc_cmpname, '') AS DELIVERYAT, ISNULL(INVOICEMASTER_DESC.INVOICE_LOTNO, 0) AS LOTNO, SUM(ISNULL(INVOICEMASTER_DESC.INVOICE_PCS, 0)) AS TAKA, SUM(ISNULL(INVOICEMASTER_DESC.INVOICE_MTRS, 0)) AS MTRS, ISNULL(GREYQUALITYMASTER.GREY_NAME, '') AS QUALITY FROM INVOICEMASTER INNER JOIN INVOICEMASTER_DESC ON INVOICEMASTER.INVOICE_NO = INVOICEMASTER_DESC.INVOICE_NO AND INVOICEMASTER.INVOICE_REGISTERID = INVOICEMASTER_DESC.INVOICE_REGISTERID AND INVOICEMASTER.INVOICE_YEARID = INVOICEMASTER_DESC.INVOICE_YEARID INNER JOIN LEDGERS ON INVOICEMASTER.INVOICE_LEDGERID = LEDGERS.Acc_id INNER JOIN GREYQUALITYMASTER ON INVOICEMASTER_DESC.INVOICE_QUALITYID = GREYQUALITYMASTER.GREY_ID LEFT OUTER JOIN LEDGERS AS DELIVERYAT ON INVOICEMASTER.INVOICE_DELIVERYID = DELIVERYAT.Acc_id LEFT OUTER JOIN LEDGERS AS BROKER ON INVOICEMASTER.INVOICE_AGENTID = BROKER.Acc_id LEFT OUTER JOIN LEDGERS AS TRANSPORT ON INVOICEMASTER.INVOICE_TRANSID = TRANSPORT.Acc_id WHERE ISNULL(INVOICEMASTER.INVOICE_TYPE,'GREY') = 'GREY' AND ISNULL(INVOICE_NOGR,'FALSE') = 'FALSE' AND INVOICEMASTER.INVOICE_YEARID = " & YearId & " AND INVOICEMASTER.INVOICE_RETURN = 0 GROUP BY INVOICEMASTER.INVOICE_NO, INVOICEMASTER.INVOICE_DATE, ISNULL(LEDGERS.Acc_cmpname, ''), ISNULL(BROKER.Acc_cmpname, ''), ISNULL(TRANSPORT.Acc_cmpname, ''), ISNULL(DELIVERYAT.Acc_cmpname, ''), ISNULL(INVOICEMASTER_DESC.INVOICE_LOTNO, 0), ISNULL(GREYQUALITYMASTER.GREY_NAME, '') UNION ALL  SELECT CHALLANMASTER.CHALLAN_NO AS CHALLANNO, CHALLANMASTER.CHALLAN_DATE AS CHALLANDATE, ISNULL(LEDGERS.Acc_cmpname, '') AS NAME, ISNULL(BROKER.Acc_cmpname, '') AS BROKER, ISNULL(TRANSPORT.Acc_cmpname, '') AS TRANSPORT, ISNULL(DELIVERYAT.Acc_cmpname, '') AS DELIVERYAT, ISNULL(CHALLANMASTER.CHALLAN_LOTNO, 0) AS LOTNO, SUM(ISNULL(CHALLANMASTER_DESC.CHALLAN_TAKA, 0)) AS TAKA, SUM(ISNULL(CHALLANMASTER_DESC.CHALLAN_MTRS, 0)) AS MTRS, ISNULL(GREYQUALITYMASTER.GREY_NAME, '') AS QUALITY FROM CHALLANMASTER INNER JOIN CHALLANMASTER_DESC ON CHALLANMASTER.CHALLAN_NO = CHALLANMASTER_DESC.CHALLAN_NO AND CHALLANMASTER.CHALLAN_YEARID = CHALLANMASTER_DESC.CHALLAN_YEARID INNER JOIN LEDGERS ON CHALLANMASTER.CHALLAN_LEDGERID = LEDGERS.Acc_id INNER JOIN GREYQUALITYMASTER ON CHALLANMASTER_DESC.CHALLAN_QUALITYID = GREYQUALITYMASTER.GREY_ID LEFT OUTER JOIN LEDGERS AS DELIVERYAT ON CHALLANMASTER.CHALLAN_DELIVERYID = DELIVERYAT.Acc_id LEFT OUTER JOIN LEDGERS AS BROKER ON CHALLANMASTER.CHALLAN_BROKERID = BROKER.Acc_id LEFT OUTER JOIN LEDGERS AS TRANSPORT ON CHALLANMASTER.CHALLAN_TRANSID = TRANSPORT.Acc_id WHERE ISNULL(CHALLANMASTER.CHALLAN_TYPE,'GREY') = 'GREY' AND ISNULL(CHALLAN_NOGR,'FALSE') = 'FALSE' AND ISNULL(CHALLAN_FORDYEING,'FALSE') = 'TRUE' AND CHALLANMASTER.CHALLAN_YEARID = " & YearId & " AND CHALLANMASTER.CHALLAN_GRMTRS = 0 GROUP BY CHALLANMASTER.CHALLAN_NO, CHALLANMASTER.CHALLAN_DATE, ISNULL(LEDGERS.Acc_cmpname, ''), ISNULL(BROKER.Acc_cmpname, ''), ISNULL(TRANSPORT.Acc_cmpname, ''), ISNULL(DELIVERYAT.Acc_cmpname, ''), ISNULL(CHALLANMASTER.CHALLAN_LOTNO, 0), ISNULL(CHALLANMASTER_DESC.CHALLAN_TAKA, 0), ISNULL(CHALLANMASTER_DESC.CHALLAN_MTRS, 0), ISNULL(GREYQUALITYMASTER.GREY_NAME, '') ) AS T ", "")
            gridbilldetails.DataSource = dttable
            If dttable.Rows.Count > 0 Then
                gridbill.FocusedRowHandle = gridbill.RowCount - 1
                gridbill.TopRowIndex = gridbill.RowCount - 15
            End If
        Catch ex As Exception
            Throw ex
        End Try
    End Sub

    Private Sub gridbill_DoubleClick(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles gridbill.DoubleClick
        Try
            If USEREDIT = False Then
                MsgBox("Insufficient Rights")
                Exit Sub
            End If
            showform(True, gridbill.GetFocusedRowCellValue("CHALLANNO"))
        Catch ex As Exception
            Throw ex
        End Try
    End Sub

    Private Sub TOOLREFRESH_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles TOOLREFRESH.Click
        Try
            If USEREDIT = False And USERVIEW = False Then
                MsgBox("Insufficient Rights")
                Exit Sub
            End If
            fillgrid()
        Catch ex As Exception
            Throw ex
        End Try
    End Sub

    Private Sub TOOLEXCEL_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles TOOLEXCEL.Click
        Try
            Dim PATH As String = "" = ""
            If FileIO.FileSystem.FileExists(PATH) = True Then FileIO.FileSystem.DeleteFile(PATH)
            PATH = Application.StartupPath & "\Pending GR Report.XLS"

            Dim opti As New DevExpress.XtraPrinting.XlsExportOptions
            opti.ShowGridLines = True

            Dim workbook As String = PATH
            If FileIO.FileSystem.FileExists(PATH) = True Then Interaction.GetObject(workbook).close(False)
            GC.Collect()

            Dim PERIOD As String = AccFrom & " - " & AccTo

            opti.SheetName = "Pending GR Report"
            gridbill.ExportToXls(PATH, opti)
            EXCELCMPHEADER(PATH, "Pending GR Report", gridbill.VisibleColumns.Count + gridbill.GroupCount, "", PERIOD)

        Catch ex As Exception
            Throw ex
        End Try
    End Sub

End Class